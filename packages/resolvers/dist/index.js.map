{"version":3,"sources":["../src/resolvers/client/components/preset.ts","../src/resolvers/client/components/resolver.ts","../src/resolvers/client/enums/preset.ts","../src/resolvers/client/enums/resolver.ts","../src/resolvers/client/react-18next/preset.ts","../src/resolvers/client/react-18next/resolver.ts"],"names":["componentBuiltInApi","clientComponentResolver","name","enumsBuiltInApi","clientEnumsResolver","i18nextBuiltInApi","clientI18nResolver"],"mappings":"aAAO,IAAMA,CAAAA,CAAsB,CACjC,kBACA,CAAA,eAAA,CACA,YACA,iBACA,CAAA,WAAA,CACA,YACA,CAAA,WAAA,CACA,eACA,CAAA,SAAA,CACA,iBACA,YACA,CAAA,YAAA,CACA,UACA,CAAA,aAAA,CACA,mBACA,CAAA,aAAA,CACA,cACF,CCfO,CAAA,IAAMC,CAA0B,CAAA,KAAiB,CACtD,IAAA,CAAM,YACN,OAAUC,CAAAA,CAAAA,EAAiB,CACzB,GAAIF,CAAoB,CAAA,QAAA,CAASE,CAAI,CACnC,CAAA,OAAO,CACL,IAAA,CAAM,qBACN,CAAA,IAAA,CAAAA,CACF,CAGJ,CACF,CCdO,EAAA,IAAMC,CAAkB,CAAA,CAC7B,oBACA,mBACA,CAAA,2BAAA,CACA,cACA,CAAA,UAAA,CACA,aACA,CAAA,sBAAA,CACA,gBACA,WACF,CAAA,CCPaC,IAAAA,CAAAA,CAAsB,KAAiB,CAClD,KAAM,WACN,CAAA,OAAA,CAAUF,CAAiB,EAAA,CACzB,GAAIC,CAAAA,CAAgB,SAASD,CAAI,CAAA,CAC/B,OAAO,CACL,IAAM,CAAA,gBAAA,CACN,KAAAA,CACF,CAGJ,CACF,CAAA,ECdO,IAAMG,CAAAA,CAAoB,CAAC,gBAAkB,CAAA,kBAAA,CAAoB,iBAAiB,CAAA,CCG5EC,IAAAA,CAAAA,CAAqB,KAAiB,CACjD,IAAA,CAAM,WACN,CAAA,OAAA,CAAUJ,CAAiB,EAAA,CACzB,GAAIG,CAAkB,CAAA,QAAA,CAASH,CAAI,CAAA,CACjC,OAAO,CACL,KAAM,eACN,CAAA,IAAA,CAAAA,CACF,CAGJ,CACF,CAAA","file":"index.js","sourcesContent":["export const componentBuiltInApi = [\n  'BookContentSetUp',\n  'BookDirectory',\n  'BookShelf',\n  'BookShelfDetail',\n  'EmptyPage',\n  'EmailInput',\n  'ErrorPage',\n  'GlobalPending',\n  'InkCard',\n  'LanguageSelect',\n  'Navigation',\n  'PersonCard',\n  'Sortable',\n  'ThemeToggle',\n  'UploadBase64Photo',\n  'UploadPhoto',\n  'SortableItem'\n]\n","import type { Resolver } from 'unplugin-auto-import/types'\nimport { componentBuiltInApi } from './preset'\n\nexport const clientComponentResolver = (): Resolver => ({\n  type: 'component',\n  resolve: (name: string) => {\n    if (componentBuiltInApi.includes(name)) {\n      return {\n        from: '@/shared/components',\n        name\n      }\n    }\n    return undefined\n  }\n})\n","export const enumsBuiltInApi = [\n  'AllSelectBookEnum',\n  'DirectoryModeEnum',\n  'EditBookShelfOpenFlagEnum',\n  'LanguageEnum',\n  'MenuEnum',\n  'MessageEnum',\n  'PaginationParamsEnum',\n  'QueryKeysEnum',\n  'ThemeEnum'\n]\n","import type { Resolver } from 'unplugin-auto-import/types'\nimport { enumsBuiltInApi } from './preset'\n\nexport const clientEnumsResolver = (): Resolver => ({\n  type: 'component',\n  resolve: (name: string) => {\n    if (enumsBuiltInApi.includes(name)) {\n      return {\n        from: '@/shared/enums',\n        name\n      }\n    }\n    return undefined\n  }\n})\n","export const i18nextBuiltInApi = ['useTranslation', 'initReactI18next', 'I18nextProvider']\n","import type { Resolver } from 'unplugin-auto-import/types'\nimport { i18nextBuiltInApi } from './preset'\n\nexport const clientI18nResolver = (): Resolver => ({\n  type: 'component',\n  resolve: (name: string) => {\n    if (i18nextBuiltInApi.includes(name)) {\n      return {\n        from: 'react-i18next',\n        name\n      }\n    }\n    return undefined\n  }\n})\n"]}