{"version":3,"sources":["../src/resolvers/client/components/preset.ts","../src/resolvers/client/components/resolver.ts","../src/resolvers/client/enums/preset.ts","../src/resolvers/client/enums/resolver.ts"],"names":["componentBuiltInApi","clientComponentResolver","name","enumsBuiltInApi","clientEnumsResolver"],"mappings":"AAAO,IAAMA,EAAsB,CACjC,kBAAA,CACA,eACA,CAAA,WAAA,CACA,kBACA,WACA,CAAA,YAAA,CACA,WACA,CAAA,eAAA,CACA,UACA,gBACA,CAAA,YAAA,CACA,YACA,CAAA,UAAA,CACA,cACA,mBACA,CAAA,aAAA,CACA,cACF,CAAA,KCfaC,CAA0B,CAAA,KAAiB,CACtD,IAAA,CAAM,YACN,OAAUC,CAAAA,CAAAA,EAAiB,CACzB,GAAIF,EAAoB,QAASE,CAAAA,CAAI,CACnC,CAAA,OAAO,CACL,IAAM,CAAA,qBAAA,CACN,IAAAA,CAAAA,CACF,CAGJ,CACF,CAAA,ECdO,IAAMC,CAAAA,CAAkB,CAC7B,mBACA,CAAA,mBAAA,CACA,2BACA,CAAA,cAAA,CACA,WACA,aACA,CAAA,sBAAA,CACA,eACA,CAAA,WACF,ECPaC,IAAAA,CAAAA,CAAsB,KAAiB,CAClD,KAAM,WACN,CAAA,OAAA,CAAUF,CAAiB,EAAA,CACzB,GAAIC,CAAgB,CAAA,QAAA,CAASD,CAAI,CAAA,CAC/B,OAAO,CACL,IAAA,CAAM,iBACN,IAAAA,CAAAA,CACF,CAGJ,CACF,CAAA","file":"index.mjs","sourcesContent":["export const componentBuiltInApi = [\n  'BookContentSetUp',\n  'BookDirectory',\n  'BookShelf',\n  'BookShelfDetail',\n  'EmptyPage',\n  'EmailInput',\n  'ErrorPage',\n  'GlobalPending',\n  'InkCard',\n  'LanguageSelect',\n  'Navigation',\n  'PersonCard',\n  'Sortable',\n  'ThemeToggle',\n  'UploadBase64Photo',\n  'UploadPhoto',\n  'SortableItem'\n]\n","import type { Resolver } from 'unplugin-auto-import/types'\nimport { componentBuiltInApi } from './preset'\n\nexport const clientComponentResolver = (): Resolver => ({\n  type: 'component',\n  resolve: (name: string) => {\n    if (componentBuiltInApi.includes(name)) {\n      return {\n        from: '@/shared/components',\n        name\n      }\n    }\n    return undefined\n  }\n})\n","export const enumsBuiltInApi = [\n  'AllSelectBookEnum',\n  'DirectoryModeEnum',\n  'EditBookShelfOpenFlagEnum',\n  'LanguageEnum',\n  'MenuEnum',\n  'MessageEnum',\n  'PaginationParamsEnum',\n  'QueryKeysEnum',\n  'ThemeEnum'\n]\n","import type { Resolver } from 'unplugin-auto-import/types'\nimport { enumsBuiltInApi } from './preset'\n\nexport const clientEnumsResolver = (): Resolver => ({\n  type: 'component',\n  resolve: (name: string) => {\n    if (enumsBuiltInApi.includes(name)) {\n      return {\n        from: '@/shared/enums',\n        name\n      }\n    }\n    return undefined\n  }\n})\n"]}