import*as a from'dayjs';var D=class{static getYear(t=new Date){return a(t).year()}static getMonth(t=new Date){return a(t).month()+1}static getDate(t=new Date){return a(t).date()}static getHour(t=new Date){return a(t).hour()}static getMinute(t=new Date){return a(t).minute()}static getSecond(t=new Date){return a(t).second()}static getTimestamp(t=new Date){return a(t).valueOf()}static formatDateYMDHMS(t=new Date,e="YYYY-MM-DD HH:mm:ss"){return a(t).format(e)}static formatDateYMDHM(t=new Date,e="YYYY-MM-DD HH:mm"){return a(t).format(e)}static formatDateMDHM(t=new Date,e="MM-DD HH:mm"){return a(t).format(e)}static formatDateYMD(t=new Date,e="YYYY-MM-DD"){return a(t).format(e)}static formatDateYM(t=new Date,e="YYYY-MM"){return a(t).format(e)}static formatDateMD(t=new Date,e="MM-DD"){return a(t).format(e)}static formatDateHMS(t=new Date,e="HH:mm:ss"){return a(t).format(e)}static formatDateHM(t=new Date,e="HH:mm"){return a(t).format(e)}static formatDateMS(t=new Date,e="mm:ss"){return a(t).format(e)}static compareTimer(t=new Date,e=new Date){return a(t).isBefore(a(e))}static compareTimerMinute(t=new Date,e=new Date,r){return t<e&&([t,e]=[e,t]),a(t).diff(a(e),r!=null?r:"minute")}static getUnitsBefore(t,e,r="YYYY-MM-DD"){return a().subtract(t,e!=null?e:"day").format(r)}static getUnitsAfter(t,e,r="YYYY-MM-DD"){return a().add(t,e!=null?e:"day").format(r)}};export{D as TransformTimeUtils};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map